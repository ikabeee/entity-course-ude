// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using entity_course_ude.data;

#nullable disable

namespace entity_course_ude.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20250511012051_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("entity_course_ude.Models.Category", b =>
                {
                    b.Property<int>("Category_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Category_Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Title");

                    b.HasKey("Category_Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("entity_course_ude.Models.Product", b =>
                {
                    b.Property<int>("Product_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Product_Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("Category_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<double>("Grade")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Product_Id");

                    b.HasIndex("Category_Id");

                    b.ToTable("Tbl_Product", (string)null);
                });

            modelBuilder.Entity("entity_course_ude.Models.ProductTag", b =>
                {
                    b.Property<int>("Tag_Id")
                        .HasColumnType("int");

                    b.Property<int>("Product_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Category_Id")
                        .HasColumnType("int");

                    b.HasKey("Tag_Id", "Product_Id");

                    b.HasIndex("Category_Id");

                    b.HasIndex("Product_Id");

                    b.ToTable("ProductTag");
                });

            modelBuilder.Entity("entity_course_ude.Models.Tag", b =>
                {
                    b.Property<int>("Tag_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Tag_Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Tag_Id");

                    b.ToTable("Tag");
                });

            modelBuilder.Entity("entity_course_ude.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("UserDetail_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserDetail_Id")
                        .IsUnique()
                        .HasFilter("[UserDetail_Id] IS NOT NULL");

                    b.ToTable("User");
                });

            modelBuilder.Entity("entity_course_ude.Models.UserDetail", b =>
                {
                    b.Property<int>("UserDetail_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserDetail_Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sport")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserDetail_Id");

                    b.ToTable("UserDetail");
                });

            modelBuilder.Entity("entity_course_ude.Models.Product", b =>
                {
                    b.HasOne("entity_course_ude.Models.Category", "Category")
                        .WithMany("Product")
                        .HasForeignKey("Category_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("entity_course_ude.Models.ProductTag", b =>
                {
                    b.HasOne("entity_course_ude.Models.Category", null)
                        .WithMany("ProductTag")
                        .HasForeignKey("Category_Id");

                    b.HasOne("entity_course_ude.Models.Product", "Product")
                        .WithMany("ProductTag")
                        .HasForeignKey("Product_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("entity_course_ude.Models.Tag", "Tag")
                        .WithMany("ProductTag")
                        .HasForeignKey("Tag_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("entity_course_ude.Models.User", b =>
                {
                    b.HasOne("entity_course_ude.Models.UserDetail", "UserDetail")
                        .WithOne("User")
                        .HasForeignKey("entity_course_ude.Models.User", "UserDetail_Id");

                    b.Navigation("UserDetail");
                });

            modelBuilder.Entity("entity_course_ude.Models.Category", b =>
                {
                    b.Navigation("Product");

                    b.Navigation("ProductTag");
                });

            modelBuilder.Entity("entity_course_ude.Models.Product", b =>
                {
                    b.Navigation("ProductTag");
                });

            modelBuilder.Entity("entity_course_ude.Models.Tag", b =>
                {
                    b.Navigation("ProductTag");
                });

            modelBuilder.Entity("entity_course_ude.Models.UserDetail", b =>
                {
                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
